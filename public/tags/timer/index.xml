<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Timer on SM Electronics</title>
    <link>http://localhost:1313/tags/timer/</link>
    <description>Recent content in Timer on SM Electronics</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/timer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NE555 Astable Calculator</title>
      <link>http://localhost:1313/posts/my-post-title-2/</link>
      <pubDate>Wed, 14 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/my-post-title-2/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;    &lt;title&gt;NE555 Astable Calculator&lt;/title&gt;&#xA;    &lt;style&gt;&#xA;        body { font-family: Arial, sans-serif; }&#xA;        .container {&#xA;            width: 95%;&#xA;            max-width: 400px;&#xA;            margin: 0 auto;&#xA;            padding: 5px;&#xA;        }&#xA;        label { display: block; margin-bottom: 5px; }&#xA;        .input-group {&#xA;            display: flex;&#xA;            justify-content: space-between;&#xA;            align-items: center;&#xA;        }&#xA;        select, input[type=&#34;number&#34;], input[type=&#34;text&#34;], button {&#xA;            width: 100%;&#xA;            padding: 10px;&#xA;            margin-bottom: 15px;&#xA;            border: 1px solid #ccc;&#xA;            border-radius: 5px;&#xA;            box-sizing: border-box;&#xA;        }&#xA;        .input-group select,&#xA;        .input-group input[type=&#34;number&#34;],&#xA;        .input-group input[type=&#34;text&#34;] {&#xA;            margin-right: 5px;&#xA;        }&#xA;        button {&#xA;            background-color: #007bff;&#xA;            color: white;&#xA;            cursor: pointer;&#xA;        }&#xA;        .error-message {&#xA;            color: red;&#xA;            font-size: 15px;&#xA;            margin-bottom: 15px;&#xA;        }&#xA;        input[type=&#34;text&#34;]:focus { outline: none; }&#xA;        @media (min-width: 600px) { .container { max-width: 600px; } }&#xA;        @media (min-width: 992px) { .container { max-width: 1200px; } }&#xA;    &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;    &lt;div class=&#34;container&#34;&gt;&#xA;        &lt;h1&gt;NE555 Astable Calculator&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;    &amp;lt;label for=&amp;quot;capacitanceValue&amp;quot;&amp;gt;Capacitance(C):&amp;lt;/label&amp;gt;&#xA;    &amp;lt;div class=&amp;quot;input-group&amp;quot;&amp;gt;&#xA;        &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;capacitanceValue&amp;quot; min=&amp;quot;0&amp;quot; step=&amp;quot;any&amp;quot;&amp;gt;&#xA;        &amp;lt;select id=&amp;quot;capacitanceUnit&amp;quot; onchange=&amp;quot;calculate()&amp;quot;&amp;gt;&#xA;            &amp;lt;option value=&amp;quot;1e-6&amp;quot;&amp;gt;micro Farad(μF)&amp;lt;/option&amp;gt;&#xA;            &amp;lt;option value=&amp;quot;1e-9&amp;quot;&amp;gt;nano Farad(nF)&amp;lt;/option&amp;gt;&#xA;        &amp;lt;/select&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;&#xA;    &amp;lt;label for=&amp;quot;resistance1Value&amp;quot;&amp;gt;Resistance 1 (R1):&amp;lt;/label&amp;gt;&#xA;    &amp;lt;div class=&amp;quot;input-group&amp;quot;&amp;gt;&#xA;        &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;resistance1Value&amp;quot; min=&amp;quot;0&amp;quot; step=&amp;quot;any&amp;quot;&amp;gt;&#xA;        &amp;lt;select id=&amp;quot;resistance1Unit&amp;quot; onchange=&amp;quot;calculate()&amp;quot;&amp;gt;&#xA;            &amp;lt;option value=&amp;quot;1&amp;quot;&amp;gt;ohm(Ω)&amp;lt;/option&amp;gt;&#xA;            &amp;lt;option value=&amp;quot;1000&amp;quot;&amp;gt;Kilo ohm(KΩ)&amp;lt;/option&amp;gt;&#xA;            &amp;lt;option value=&amp;quot;1000000&amp;quot;&amp;gt;Mega ohm(MΩ)&amp;lt;/option&amp;gt;&#xA;        &amp;lt;/select&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;&#xA;    &amp;lt;label for=&amp;quot;resistance2Value&amp;quot;&amp;gt;Resistance 2 (R2):&amp;lt;/label&amp;gt;&#xA;    &amp;lt;div class=&amp;quot;input-group&amp;quot;&amp;gt;&#xA;        &amp;lt;input type=&amp;quot;number&amp;quot; id=&amp;quot;resistance2Value&amp;quot; min=&amp;quot;0&amp;quot; step=&amp;quot;any&amp;quot;&amp;gt;&#xA;        &amp;lt;select id=&amp;quot;resistance2Unit&amp;quot; onchange=&amp;quot;calculate()&amp;quot;&amp;gt;&#xA;            &amp;lt;option value=&amp;quot;1&amp;quot;&amp;gt;ohm(Ω)&amp;lt;/option&amp;gt;&#xA;            &amp;lt;option value=&amp;quot;1000&amp;quot;&amp;gt;Kilo ohm(KΩ)&amp;lt;/option&amp;gt;&#xA;            &amp;lt;option value=&amp;quot;1000000&amp;quot;&amp;gt;Mega ohm(MΩ)&amp;lt;/option&amp;gt;&#xA;        &amp;lt;/select&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;&#xA;    &amp;lt;button onclick=&amp;quot;calculate()&amp;quot;&amp;gt;Calculate&amp;lt;/button&amp;gt;&#xA;&#xA;    &amp;lt;div class=&amp;quot;error-message&amp;quot; id=&amp;quot;errorMessage&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&#xA;&#xA;    &amp;lt;label for=&amp;quot;timeLowValue&amp;quot;&amp;gt;Time Low(T2):&amp;lt;/label&amp;gt;&#xA;    &amp;lt;div class=&amp;quot;input-group&amp;quot;&amp;gt;&#xA;        &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;timeLowValue&amp;quot; readonly&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;&#xA;    &amp;lt;label for=&amp;quot;timeHighValue&amp;quot;&amp;gt;Time High(T1):&amp;lt;/label&amp;gt;&#xA;    &amp;lt;div class=&amp;quot;input-group&amp;quot;&amp;gt;&#xA;        &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;timeHighValue&amp;quot; readonly&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;&#xA;    &amp;lt;label for=&amp;quot;periodValue&amp;quot;&amp;gt;Period(T):&amp;lt;/label&amp;gt;&#xA;    &amp;lt;div class=&amp;quot;input-group&amp;quot;&amp;gt;&#xA;        &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;periodValue&amp;quot; readonly&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;&#xA;    &amp;lt;label for=&amp;quot;frequencyValue&amp;quot;&amp;gt;Frequency:&amp;lt;/label&amp;gt;&#xA;    &amp;lt;div class=&amp;quot;input-group&amp;quot;&amp;gt;&#xA;        &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;frequencyValue&amp;quot; readonly&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;&#xA;    &amp;lt;label for=&amp;quot;dutyCycleValue&amp;quot;&amp;gt;Duty Cycle:&amp;lt;/label&amp;gt;&#xA;    &amp;lt;div class=&amp;quot;input-group&amp;quot;&amp;gt;&#xA;        &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;dutyCycleValue&amp;quot; readonly&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;&amp;lt;/div&amp;gt;&#xA;&#xA;&amp;lt;script&amp;gt;&#xA;    function calculate() {&#xA;        const capacitanceValue = parseFloat(document.getElementById(&amp;quot;capacitanceValue&amp;quot;).value);&#xA;        const selectedCapacitanceUnit = parseFloat(document.getElementById(&amp;quot;capacitanceUnit&amp;quot;).value);&#xA;        const resistance1Value = parseFloat(document.getElementById(&amp;quot;resistance1Value&amp;quot;).value);&#xA;        const selectedResistance1Unit = parseFloat(document.getElementById(&amp;quot;resistance1Unit&amp;quot;).value);&#xA;        const resistance2Value = parseFloat(document.getElementById(&amp;quot;resistance2Value&amp;quot;).value);&#xA;        const selectedResistance2Unit = parseFloat(document.getElementById(&amp;quot;resistance2Unit&amp;quot;).value);&#xA;&#xA;        const errorMessageElement = document.getElementById(&amp;quot;errorMessage&amp;quot;);&#xA;&#xA;        const capacitanceInFarads = capacitanceValue * selectedCapacitanceUnit;&#xA;        const resistance1InOhms = resistance1Value * selectedResistance1Unit;&#xA;        const resistance2InOhms = resistance2Value * selectedResistance2Unit;&#xA;&#xA;        if (isNaN(capacitanceInFarads) || isNaN(resistance1InOhms) || isNaN(resistance2InOhms)) {&#xA;            errorMessageElement.textContent = &amp;quot;Please enter valid values for all 3 fields.&amp;quot;;&#xA;            document.getElementById(&amp;quot;timeLowValue&amp;quot;).value = &amp;quot;&amp;quot;;&#xA;            document.getElementById(&amp;quot;timeHighValue&amp;quot;).value = &amp;quot;&amp;quot;;&#xA;            document.getElementById(&amp;quot;periodValue&amp;quot;).value = &amp;quot;&amp;quot;;&#xA;            document.getElementById(&amp;quot;frequencyValue&amp;quot;).value = &amp;quot;&amp;quot;;&#xA;            document.getElementById(&amp;quot;dutyCycleValue&amp;quot;).value = &amp;quot;&amp;quot;;&#xA;            return;&#xA;        }&#xA;&#xA;        errorMessageElement.textContent = &amp;quot;&amp;quot;;&#xA;&#xA;        const calculatedTimeLow = 0.693 * resistance2InOhms * capacitanceInFarads;&#xA;        const calculatedTimeHigh = 0.693 * ((resistance1InOhms + resistance2InOhms) * capacitanceInFarads);&#xA;        const calculatedPeriodValue = calculatedTimeLow + calculatedTimeHigh;&#xA;        const calculatedFrequency = 1 / calculatedPeriodValue;&#xA;        const calculatedDutyCycle = (calculatedTimeHigh / calculatedPeriodValue) * 100;&#xA;&#xA;        document.getElementById(&amp;quot;timeLowValue&amp;quot;).value = calculatedTimeLow.toFixed(6) + &amp;quot; seconds&amp;quot;;&#xA;        document.getElementById(&amp;quot;timeHighValue&amp;quot;).value = calculatedTimeHigh.toFixed(6) + &amp;quot; seconds&amp;quot;;&#xA;        document.getElementById(&amp;quot;periodValue&amp;quot;).value = calculatedPeriodValue.toFixed(6) + &amp;quot; seconds&amp;quot;;&#xA;&#xA;        let convertedFrequency;&#xA;        if (calculatedFrequency &amp;gt;= 1e3 &amp;amp;&amp;amp; calculatedFrequency &amp;lt; 1e6) {&#xA;            convertedFrequency = (calculatedFrequency / 1e3).toFixed(3);&#xA;            document.getElementById(&amp;quot;frequencyValue&amp;quot;).value = `${convertedFrequency} KiloHertz`;&#xA;        } else if (calculatedFrequency &amp;gt;= 1e6) {&#xA;            convertedFrequency = (calculatedFrequency / 1e6).toFixed(3);&#xA;            document.getElementById(&amp;quot;frequencyValue&amp;quot;).value = `${convertedFrequency} MegaHertz`;&#xA;        } else {&#xA;            convertedFrequency = calculatedFrequency.toFixed(3);&#xA;            document.getElementById(&amp;quot;frequencyValue&amp;quot;).value = `${convertedFrequency} Hertz`;&#xA;        }&#xA;&#xA;        document.getElementById(&amp;quot;dutyCycleValue&amp;quot;).value = calculatedDutyCycle.toFixed(3) + &amp;quot;%&amp;quot;;&#xA;    }&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;</description>
    </item>
  </channel>
</rss>
